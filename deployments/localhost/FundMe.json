{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa2a8bec638041ab19efcb57e75b701fc45a9ce1f5cbe638f6ba1467888bd1ca7",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1042086",
    "logsBloom": "0x
    "blockHash": "0x17d5c07e79526d00e939e48f02e53709dd8fa1d58ce876321570fc57a6776df2",
    "transactionHash": "0xa2a8bec638041ab19efcb57e75b701fc45a9ce1f5cbe638f6ba1467888bd1ca7",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1042086",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "8ec17cbef1d94c040b33db364d4ed23a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"params\":{\"fundingAddress\":\"the address of the funder\"},\"returns\":{\"_0\":\"the amount funded\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"Funds our contract based on the ETH/USD price\"},\"getAddressToAmountFunded(address)\":{\"notice\":\"Gets the amount that an address has funded\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundeMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundeMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// 1. Pragma\\npragma solidity ^0.8.7;\\n// 2. Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// 3. Interfaces, Libraries, Contracts\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // State variables\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    address private immutable i_owner;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    AggregatorV3Interface private immutable s_priceFeed;\\n\\n    // Events (we have none!)\\n\\n    // Modifiers\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Functions Order:\\n    //// constructor\\n    //// receive\\n    //// fallback\\n    //// external\\n    //// public\\n    //// internal\\n    //// private\\n    //// view / pure\\n\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    /// @notice Funds our contract based on the ETH/USD price\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // Transfer vs call vs Send\\n        // payable(msg.sender).transfer(address(this).balance);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // payable(msg.sender).transfer(address(this).balance);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    /** @notice Gets the amount that an address has funded\\n     *  @param fundingAddress the address of the funder\\n     *  @return the amount funded\\n     */\\n    function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n    // * receive function\\n    receive() external payable {}\\n\\n    // * fallback function\\n    fallback() external payable {}\\n\\n}\\n\",\"keccak256\":\"0xf74b0f9aba2475a4ff5014b9f9a34edddce13dc3d6e16aa23e1333eaa6df0aa5\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    // ETH/USD rate in 18 digit\\n    return uint256(answer * 10000000000);\\n  }\\n\\n  // 1000000000\\n  // call it get fiatConversionRate, since it assumes something about decimals\\n  // It wouldn't work for every aggregator\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n    // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0x85e1796e8ea7d1ae7df679124784e93ec9bada2bb235a8a1be214bff6462629c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200138138038062001381833981810160405281019062000037919062000116565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000148565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000de82620000b1565b9050919050565b620000f081620000d1565b8114620000fc57600080fd5b50565b6000815190506200011081620000e5565b92915050565b6000602082840312156200012f576200012e620000ac565b5b60006200013f84828501620000ff565b91505092915050565b60805160601c60a05160601c6111e36200019e6000396000818161023e0152818161054201526105750152600081816102e1015281816104740152818161051a015281816106a1015261089701526111e36000f3fe60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e81461013d5780639e87a5cd14610168578063b60d428814610193578063be2693f01461019d578063d7b4750c146101b457610091565b80630343fb25146100935780630d8e6e2c146100d05780633ccfd60b146100fb5780636b69a5921461011257610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b59190610b5a565b6101f1565b6040516100c79190610ba0565b60405180910390f35b3480156100dc57600080fd5b506100e561023a565b6040516100f29190610ba0565b60405180910390f35b34801561010757600080fd5b506101106102df565b005b34801561011e57600080fd5b50610127610509565b6040516101349190610ba0565b60405180910390f35b34801561014957600080fd5b50610152610516565b60405161015f9190610bca565b60405180910390f35b34801561017457600080fd5b5061017d61053e565b60405161018a9190610c44565b60405180910390f35b61019b610566565b005b3480156101a957600080fd5b506101b261069f565b005b3480156101c057600080fd5b506101db60048036038101906101d69190610c8b565b61092d565b6040516101e89190610bca565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a257600080fd5b505afa1580156102b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102da9190610ccd565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610364576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040f57600080828154811061038957610388610cfa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040790610d58565b915050610367565b50600067ffffffffffffffff81111561042b5761042a610da1565b5b6040519080825280602002602001820160405280156104595781602001602082028036833780820191505090505b506000908051906020019061046f929190610a50565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104b690610e01565b60006040518083038185875af1925050503d80600081146104f3576040519150601f19603f3d011682016040523d82523d6000602084013e6104f8565b606091505b505090508061050657600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6802b5e3af16b18800006105a37f00000000000000000000000000000000000000000000000000000000000000003461097490919063ffffffff16565b10156105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db90610e73565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106339190610e93565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610724576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107a757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161075d575b5050505050905060005b81518110156108325760008282815181106107cf576107ce610cfa565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082a90610d58565b9150506107b1565b50600067ffffffffffffffff81111561084e5761084d610da1565b5b60405190808252806020026020018201604052801561087c5781602001602082028036833780820191505090505b5060009080519060200190610892929190610a50565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108d990610e01565b60006040518083038185875af1925050503d8060008114610916576040519150601f19603f3d011682016040523d82523d6000602084013e61091b565b606091505b505090508061092957600080fd5b5050565b600080828154811061094257610941610cfa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610980836109b0565b90506000670de0b6b3a764000085836109999190610ee9565b6109a39190610f72565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109f957600080fd5b505afa158015610a0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a31919061101b565b5050509150506402540be40081610a489190611096565b915050919050565b828054828255906000526020600020908101928215610ac9579160200282015b82811115610ac85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a70565b5b509050610ad69190610ada565b5090565b5b80821115610af3576000816000905550600101610adb565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2782610afc565b9050919050565b610b3781610b1c565b8114610b4257600080fd5b50565b600081359050610b5481610b2e565b92915050565b600060208284031215610b7057610b6f610af7565b5b6000610b7e84828501610b45565b91505092915050565b6000819050919050565b610b9a81610b87565b82525050565b6000602082019050610bb56000830184610b91565b92915050565b610bc481610b1c565b82525050565b6000602082019050610bdf6000830184610bbb565b92915050565b6000819050919050565b6000610c0a610c05610c0084610afc565b610be5565b610afc565b9050919050565b6000610c1c82610bef565b9050919050565b6000610c2e82610c11565b9050919050565b610c3e81610c23565b82525050565b6000602082019050610c596000830184610c35565b92915050565b610c6881610b87565b8114610c7357600080fd5b50565b600081359050610c8581610c5f565b92915050565b600060208284031215610ca157610ca0610af7565b5b6000610caf84828501610c76565b91505092915050565b600081519050610cc781610c5f565b92915050565b600060208284031215610ce357610ce2610af7565b5b6000610cf184828501610cb8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6382610b87565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9657610d95610d29565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610deb600083610dd0565b9150610df682610ddb565b600082019050919050565b6000610e0c82610dde565b9150819050919050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610e5d601b83610e16565b9150610e6882610e27565b602082019050919050565b60006020820190508181036000830152610e8c81610e50565b9050919050565b6000610e9e82610b87565b9150610ea983610b87565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ede57610edd610d29565b5b828201905092915050565b6000610ef482610b87565b9150610eff83610b87565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f3857610f37610d29565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f7d82610b87565b9150610f8883610b87565b925082610f9857610f97610f43565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fc281610fa3565b8114610fcd57600080fd5b50565b600081519050610fdf81610fb9565b92915050565b6000819050919050565b610ff881610fe5565b811461100357600080fd5b50565b60008151905061101581610fef565b92915050565b600080600080600060a0868803121561103757611036610af7565b5b600061104588828901610fd0565b955050602061105688828901611006565b945050604061106788828901610cb8565b935050606061107888828901610cb8565b925050608061108988828901610fd0565b9150509295509295909350565b60006110a182610fe5565b91506110ac83610fe5565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110eb576110ea610d29565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561112857611127610d29565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561116557611164610d29565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111a2576111a1610d29565b5b82820290509291505056fea2646970667358221220f54df97e3d6dee6800d0d0357090b90793227266683497cb7570d6991e7d346764736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e81461013d5780639e87a5cd14610168578063b60d428814610193578063be2693f01461019d578063d7b4750c146101b457610091565b80630343fb25146100935780630d8e6e2c146100d05780633ccfd60b146100fb5780636b69a5921461011257610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b59190610b5a565b6101f1565b6040516100c79190610ba0565b60405180910390f35b3480156100dc57600080fd5b506100e561023a565b6040516100f29190610ba0565b60405180910390f35b34801561010757600080fd5b506101106102df565b005b34801561011e57600080fd5b50610127610509565b6040516101349190610ba0565b60405180910390f35b34801561014957600080fd5b50610152610516565b60405161015f9190610bca565b60405180910390f35b34801561017457600080fd5b5061017d61053e565b60405161018a9190610c44565b60405180910390f35b61019b610566565b005b3480156101a957600080fd5b506101b261069f565b005b3480156101c057600080fd5b506101db60048036038101906101d69190610c8b565b61092d565b6040516101e89190610bca565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a257600080fd5b505afa1580156102b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102da9190610ccd565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610364576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040f57600080828154811061038957610388610cfa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040790610d58565b915050610367565b50600067ffffffffffffffff81111561042b5761042a610da1565b5b6040519080825280602002602001820160405280156104595781602001602082028036833780820191505090505b506000908051906020019061046f929190610a50565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104b690610e01565b60006040518083038185875af1925050503d80600081146104f3576040519150601f19603f3d011682016040523d82523d6000602084013e6104f8565b606091505b505090508061050657600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6802b5e3af16b18800006105a37f00000000000000000000000000000000000000000000000000000000000000003461097490919063ffffffff16565b10156105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db90610e73565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106339190610e93565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610724576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107a757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161075d575b5050505050905060005b81518110156108325760008282815181106107cf576107ce610cfa565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082a90610d58565b9150506107b1565b50600067ffffffffffffffff81111561084e5761084d610da1565b5b60405190808252806020026020018201604052801561087c5781602001602082028036833780820191505090505b5060009080519060200190610892929190610a50565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108d990610e01565b60006040518083038185875af1925050503d8060008114610916576040519150601f19603f3d011682016040523d82523d6000602084013e61091b565b606091505b505090508061092957600080fd5b5050565b600080828154811061094257610941610cfa565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610980836109b0565b90506000670de0b6b3a764000085836109999190610ee9565b6109a39190610f72565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109f957600080fd5b505afa158015610a0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a31919061101b565b5050509150506402540be40081610a489190611096565b915050919050565b828054828255906000526020600020908101928215610ac9579160200282015b82811115610ac85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a70565b5b509050610ad69190610ada565b5090565b5b80821115610af3576000816000905550600101610adb565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2782610afc565b9050919050565b610b3781610b1c565b8114610b4257600080fd5b50565b600081359050610b5481610b2e565b92915050565b600060208284031215610b7057610b6f610af7565b5b6000610b7e84828501610b45565b91505092915050565b6000819050919050565b610b9a81610b87565b82525050565b6000602082019050610bb56000830184610b91565b92915050565b610bc481610b1c565b82525050565b6000602082019050610bdf6000830184610bbb565b92915050565b6000819050919050565b6000610c0a610c05610c0084610afc565b610be5565b610afc565b9050919050565b6000610c1c82610bef565b9050919050565b6000610c2e82610c11565b9050919050565b610c3e81610c23565b82525050565b6000602082019050610c596000830184610c35565b92915050565b610c6881610b87565b8114610c7357600080fd5b50565b600081359050610c8581610c5f565b92915050565b600060208284031215610ca157610ca0610af7565b5b6000610caf84828501610c76565b91505092915050565b600081519050610cc781610c5f565b92915050565b600060208284031215610ce357610ce2610af7565b5b6000610cf184828501610cb8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6382610b87565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9657610d95610d29565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610deb600083610dd0565b9150610df682610ddb565b600082019050919050565b6000610e0c82610dde565b9150819050919050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610e5d601b83610e16565b9150610e6882610e27565b602082019050919050565b60006020820190508181036000830152610e8c81610e50565b9050919050565b6000610e9e82610b87565b9150610ea983610b87565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ede57610edd610d29565b5b828201905092915050565b6000610ef482610b87565b9150610eff83610b87565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f3857610f37610d29565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f7d82610b87565b9150610f8883610b87565b925082610f9857610f97610f43565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fc281610fa3565b8114610fcd57600080fd5b50565b600081519050610fdf81610fb9565b92915050565b6000819050919050565b610ff881610fe5565b811461100357600080fd5b50565b60008151905061101581610fef565b92915050565b600080600080600060a0868803121561103757611036610af7565b5b600061104588828901610fd0565b955050602061105688828901611006565b945050604061106788828901610cb8565b935050606061107888828901610cb8565b925050608061108988828901610fd0565b9150509295509295909350565b60006110a182610fe5565b91506110ac83610fe5565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110eb576110ea610d29565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561112857611127610d29565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561116557611164610d29565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111a2576111a1610d29565b5b82820290509291505056fea2646970667358221220f54df97e3d6dee6800d0d0357090b90793227266683497cb7570d6991e7d346764736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getAddressToAmountFunded(address)": {
        "params": {
          "fundingAddress": "the address of the funder"
        },
        "returns": {
          "_0": "the amount funded"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "Funds our contract based on the ETH/USD price"
      },
      "getAddressToAmountFunded(address)": {
        "notice": "Gets the amount that an address has funded"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 66,
        "contract": "contracts/FundeMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 70,
        "contract": "contracts/FundeMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}